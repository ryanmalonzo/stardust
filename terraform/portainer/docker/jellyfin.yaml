services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:10.10.7
    container_name: jellyfin
    ports:
      - 8096:8096
      # Discovery ports
      - 7359:7359/udp
      - 1900:1900/udp
    volumes:
      - ${DOCKER_APPDATA}/jellyfin:/config
      - ${NFS_MEDIA}/anime/tv:/data/anime/tv
      - ${NFS_MEDIA}/anime/movies:/data/anime/movies
      - ${NFS_MEDIA}/non-anime/tv:/data/non-anime/tv
      - ${NFS_MEDIA}/non-anime/movies:/data/non-anime/movies
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=https://jellyfin.ryanmalonzo.com
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:2.7.2
    container_name: jellyseerr
    ports:
      - "5055:5055"
    volumes:
      - ${DOCKER_APPDATA}/jellyseerr:/app/config
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - PORT=5055
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.37.0
    container_name: prowlarr
    ports:
      - "9696:9696"
    volumes:
      - ${DOCKER_APPDATA}/prowlarr:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:4.5.2
    container_name: sabnzbd
    ports:
      - "8080:8080"
    volumes:
      - ${DOCKER_APPDATA}/sabnzbd:/config
      - ${INCOMPLETE_DOWNLOADS_DIR}:/incomplete-downloads
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:5.1.2
    container_name: qbittorrent
    ports:
      - "8081:8081"
      - "6881:6881"
      - "6881:6881/udp"
    volumes:
      - ${DOCKER_APPDATA}/qbittorrent:/config
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8081
      - TORRENTING_PORT=6881
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:5.26.2
    container_name: radarr
    ports:
      - "7878:7878"
    volumes:
      - ${DOCKER_APPDATA}/radarr:/config
      - ${NFS_MEDIA}/anime/movies:/movies
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    ports:
      - "8989:8989"
    volumes:
      - ${DOCKER_APPDATA}/sonarr:/config
      - ${NFS_MEDIA}/anime/tv:/tv
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped

  profilarr:
    image: santiagosayshey/profilarr:v1.0.1
    container_name: profilarr
    ports:
      - "6868:6868"
    volumes:
      - ${DOCKER_APPDATA}/profilarr:/config
    environment:
      - TZ=${TZ}
    restart: unless-stopped

  radarr-nonanime:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr-nonanime
    ports:
      - "7879:7878"
    volumes:
      - ${DOCKER_APPDATA}/radarr-nonanime:/config
      - ${NFS_MEDIA}/non-anime/movies:/movies
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped

  sonarr-nonanime:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr-nonanime
    ports:
      - "8990:8989"
    volumes:
      - ${DOCKER_APPDATA}/sonarr-nonanime:/config
      - ${NFS_MEDIA}/non-anime/tv:/tv
      - ${DOWNLOADS_DIR}:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped

  profilarr-nonanime:
    image: santiagosayshey/profilarr:v1.0.1
    container_name: profilarr-nonanime
    ports:
      - "6869:6868"
    volumes:
      - ${DOCKER_APPDATA}/profilarr-nonanime:/config
    environment:
      - TZ=${TZ}
    restart: unless-stopped

  fileflows:
    image: revenz/fileflows:25.08
    container_name: fileflows
    ports:
      - "19200:5000"
    volumes:
      - socket-proxy:/var/run
      - ${DOCKER_APPDATA}/fileflows-temp:/temp
      - ${DOCKER_APPDATA}/fileflows-data:/app/Data
      - ${DOCKER_APPDATA}/fileflows-logs:/app/Logs
      - ${DOCKER_APPDATA}/fileflows-common:/app/common
      - ${NFS_MEDIA}/anime/movies:/media/anime/movies
      - ${NFS_MEDIA}/anime/tv:/media/anime/tv
      - ${NFS_MEDIA}/non-anime/movies:/media/non-anime/movies
      - ${NFS_MEDIA}/non-anime/tv:/media/non-anime/tv
    environment:
      - TempPathHost=${DOCKER_APPDATA}/fileflows-temp
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    devices:
      - "/dev/dri:/dev/dri"
    restart: unless-stopped

volumes:
  socket-proxy:
    external: true

networks:
  socket-proxy:
    external: true
